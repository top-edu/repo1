
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  category: 'category',
  type: 'type'
};

exports.Prisma.CommoncontentsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  lastModifiedTime: 'lastModifiedTime'
};

exports.Prisma.CredithistoryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deductedCredits: 'deductedCredits',
  addedCredits: 'addedCredits',
  addedCreditsFromUserId: 'addedCreditsFromUserId',
  addedCreditsToUserId: 'addedCreditsToUserId',
  description: 'description',
  lastModifiedTime: 'lastModifiedTime'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  text: 'text',
  fromId: 'fromId',
  toId: 'toId',
  questionId: 'questionId',
  isRead: 'isRead',
  lastModifiedTime: 'lastModifiedTime'
};

exports.Prisma.PeopleScalarFieldEnum = {
  id: 'id',
  type: 'type',
  givenname: 'givenname',
  surname: 'surname',
  mobile: 'mobile',
  email: 'email',
  address: 'address',
  status: 'status',
  password: 'password',
  token: 'token',
  permission: 'permission',
  note: 'note',
  orders: 'orders',
  refNo: 'refNo',
  credits: 'credits',
  lastModifiedTime: 'lastModifiedTime'
};

exports.Prisma.QuestionsScalarFieldEnum = {
  id: 'id',
  type: 'type',
  categoryId: 'categoryId',
  setNo: 'setNo',
  commonContentId: 'commonContentId',
  content: 'content',
  answerA: 'answerA',
  answerB: 'answerB',
  answerC: 'answerC',
  answerD: 'answerD',
  answerE: 'answerE',
  note: 'note',
  correctAnswer: 'correctAnswer',
  wrongQuestionOfChenyi: 'wrongQuestionOfChenyi',
  newQuestionOfChenyi: 'newQuestionOfChenyi',
  source: 'source',
  correctAnswerCount: 'correctAnswerCount',
  totalAnswerCount: 'totalAnswerCount',
  lastModifiedTime: 'lastModifiedTime',
  level: 'level'
};

exports.Prisma.UserquestionsScalarFieldEnum = {
  userId: 'userId',
  questionId: 'questionId',
  userAnswer: 'userAnswer',
  lastModifiedTime: 'lastModifiedTime'
};

exports.Prisma.UserquestionsetsScalarFieldEnum = {
  userId: 'userId',
  setNo: 'setNo',
  type: 'type',
  finished: 'finished',
  lastModifiedTime: 'lastModifiedTime',
  random: 'random'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.categoriesOrderByRelevanceFieldEnum = {
  category: 'category',
  type: 'type'
};

exports.Prisma.commoncontentsOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.credithistoryOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.messagesOrderByRelevanceFieldEnum = {
  text: 'text'
};

exports.Prisma.peopleOrderByRelevanceFieldEnum = {
  type: 'type',
  givenname: 'givenname',
  surname: 'surname',
  mobile: 'mobile',
  email: 'email',
  address: 'address',
  status: 'status',
  password: 'password',
  token: 'token',
  permission: 'permission',
  note: 'note',
  orders: 'orders',
  refNo: 'refNo'
};

exports.Prisma.questionsOrderByRelevanceFieldEnum = {
  type: 'type',
  content: 'content',
  answerA: 'answerA',
  answerB: 'answerB',
  answerC: 'answerC',
  answerD: 'answerD',
  answerE: 'answerE',
  note: 'note',
  correctAnswer: 'correctAnswer',
  source: 'source',
  level: 'level'
};

exports.Prisma.userquestionsOrderByRelevanceFieldEnum = {
  userAnswer: 'userAnswer'
};

exports.Prisma.userquestionsetsOrderByRelevanceFieldEnum = {
  type: 'type'
};


exports.Prisma.ModelName = {
  categories: 'categories',
  commoncontents: 'commoncontents',
  credithistory: 'credithistory',
  messages: 'messages',
  people: 'people',
  questions: 'questions',
  userquestions: 'userquestions',
  userquestionsets: 'userquestionsets'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
